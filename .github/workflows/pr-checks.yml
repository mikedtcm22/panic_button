name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: '20'

jobs:
  label-size:
    name: Label PR Size
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Label PR based on size
        uses: codelytv/pr-size-labeler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          xs_label: 'size/xs'
          xs_max_size: '10'
          s_label: 'size/s'
          s_max_size: '100'
          m_label: 'size/m'
          m_max_size: '500'
          l_label: 'size/l'
          l_max_size: '1000'
          xl_label: 'size/xl'
          fail_if_xl: false

  check-conflicts:
    name: Check for Merge Conflicts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for merge conflicts
        uses: eps1lon/actions-label-merge-conflict@v3
        with:
          dirtyLabel: 'has-conflicts'
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          commentOnDirty: 'This PR has merge conflicts. Please resolve them before merging.'
          commentOnClean: 'Merge conflicts have been resolved.'

  verify-files:
    name: Verify Required Files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for package-lock.json changes
        run: |
          if git diff --name-only origin/${{ github.base_ref }}..HEAD | grep -q "package.json"; then
            if ! git diff --name-only origin/${{ github.base_ref }}..HEAD | grep -q "package-lock.json"; then
              echo "::error::package.json was modified but package-lock.json was not updated"
              exit 1
            fi
          fi

      - name: Check for Prisma schema changes
        run: |
          if git diff --name-only origin/${{ github.base_ref }}..HEAD | grep -q "prisma/schema.prisma"; then
            echo "::warning::Prisma schema was modified. Remember to create a migration if needed."
          fi

      - name: Check for environment variable changes
        run: |
          if git diff --name-only origin/${{ github.base_ref }}..HEAD | grep -q ".env.example"; then
            echo "::warning::Environment variables were modified. Update documentation if needed."
          fi

  test-coverage-delta:
    name: Test Coverage Delta
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: file:./test.db
      NEXT_PUBLIC_MOCK_MODE: true
      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: pk_test_mock
      CLERK_SECRET_KEY: sk_test_mock

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Setup test database
        run: npx prisma db push --skip-seed

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Generate coverage report comment
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: ./coverage/lcov.info
          delete-old-comments: true

  bundle-analysis:
    name: Bundle Size Analysis
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_MOCK_MODE: true
      DATABASE_URL: file:./build.db
      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: pk_test_build
      CLERK_SECRET_KEY: sk_test_build

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Build and analyze bundle
        run: |
          npm run build
          npx -p nextjs-bundle-analysis report

      - name: Upload bundle analysis
        uses: actions/upload-artifact@v3
        with:
          name: bundle-analysis
          path: .next/analyze/

      - name: Comment bundle size
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');

            // Get bundle sizes
            const buildDir = '.next';
            let totalSize = 0;

            function getDirectorySize(dir) {
              const files = fs.readdirSync(dir);
              let size = 0;
              
              files.forEach(file => {
                const filePath = path.join(dir, file);
                const stats = fs.statSync(filePath);
                
                if (stats.isDirectory()) {
                  size += getDirectorySize(filePath);
                } else {
                  size += stats.size;
                }
              });
              
              return size;
            }

            if (fs.existsSync(buildDir)) {
              totalSize = getDirectorySize(buildDir);
            }

            const sizeMB = (totalSize / 1024 / 1024).toFixed(2);

            const comment = `## ðŸ“¦ Bundle Size Report

            **Total Build Size:** ${sizeMB} MB

            ### Size Breakdown:
            - Static assets: Check artifacts for detailed analysis
            - Server bundles: Included in total

            *Note: This is the development build size. Production builds will be smaller due to optimization.*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: high
          allow-licenses: MIT, Apache-2.0, BSD-3-Clause, BSD-2-Clause, ISC

  pr-title-check:
    name: PR Title Check
    runs-on: ubuntu-latest
    steps:
      - name: Check PR title format
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
          requireScope: false
          subjectPattern: ^[A-Z].*[^.]$
          subjectPatternError: |
            The subject "{subject}" found in the pull request title "{title}"
            doesn't match the configured pattern. Please ensure that:
            - The subject starts with a capital letter
            - The subject doesn't end with a period

  auto-assign:
    name: Auto Assign Reviewers
    runs-on: ubuntu-latest
    steps:
      - name: Auto assign reviewers
        uses: kentaro-m/auto-assign-action@v1.2.5
        with:
          configuration-path: '.github/auto-assign.yml'
