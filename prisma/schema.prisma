// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  clerkId   String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  
  campaigns Campaign[]
  files     File[]
  sessions  Session[]
}

model Campaign {
  id          String    @id @default(cuid())
  title       String
  description String?
  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  files       File[]
  sessions    Session[]
  digest      String?   // Will store JSON as text in SQLite
}

model File {
  id         String    @id @default(cuid())
  fileName   String
  fileType   String
  fileSize   Int
  storageKey String    @unique
  userId     String
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  campaignId String?
  campaign   Campaign? @relation(fields: [campaignId], references: [id], onDelete: Cascade)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Session {
  id         String      @id @default(cuid())
  userId     String
  user       User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  campaignId String
  campaign   Campaign    @relation(fields: [campaignId], references: [id], onDelete: Cascade)
  startTime  DateTime    @default(now())
  endTime    DateTime?
  isActive   Boolean     @default(false)
  notes      String?
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  
  panicCalls PanicCall[]
}

model PanicCall {
  id         String   @id @default(cuid())
  sessionId  String
  session    Session  @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  promptType String
  context    String?
  response   String
  tokens     Int?
  createdAt  DateTime @default(now())
}
